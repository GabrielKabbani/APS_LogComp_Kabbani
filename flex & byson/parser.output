Terminals unused in grammar

    COLON
    FUNC_TYPE
    RETURN


Grammar

    0 $accept: program $end

    1 program: block

    2 block: OPEN_KEY statement CLOSE_KEY
    3      | OPEN_KEY CLOSE_KEY

    4 statement: assigment
    5          | block
    6          | print
    7          | if
    8          | while
    9          | var_type SEMI_COLON

   10 relexpression: expression EQUAL_TO expression
   11              | expression BIGGER_THAN expression
   12              | expression SMALLER_THAN expression
   13              | expression CONCAT expression
   14              | expression

   15 expression: term PLUS term
   16           | term MINUS term
   17           | term OR term
   18           | term

   19 term: factor
   20     | factor MULT factor
   21     | factor DIV factor
   22     | factor AND factor

   23 factor: INTEGER
   24       | STRING
   25       | IDENTIFIER
   26       | PLUS factor
   27       | MINUS factor
   28       | NOT factor
   29       | READ OPEN_PAR CLOSE_PAR
   30       | OPEN_PAR relexpression CLOSE_PAR

   31 while: WHILE OPEN_PAR relexpression CLOSE_PAR statement

   32 if: IF OPEN_PAR relexpression CLOSE_PAR statement else

   33 assigment: var_type IDENTIFIER EQUAL relexpression

   34 print: PRINT OPEN_PAR relexpression CLOSE_PAR

   35 else: ELSE statement

   36 var_type: VAR_TYPE IDENTIFIER
   37         | COMMA IDENTIFIER


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    IDENTIFIER (258) 25 33 36 37
    STRING (259) 24
    INTEGER (260) 23
    WHILE (261) 31
    IF (262) 32
    ELSE (263) 35
    PRINT (264) 34
    READ (265) 29
    EQUAL (266) 33
    EQUAL_TO (267) 10
    NOT (268) 28
    PLUS (269) 15 26
    MINUS (270) 16 27
    MULT (271) 20
    DIV (272) 21
    AND (273) 22
    OR (274) 17
    BIGGER_THAN (275) 11
    SMALLER_THAN (276) 12
    CONCAT (277) 13
    COLON (278)
    SEMI_COLON (279) 9
    COMMA (280) 37
    VAR_TYPE (281) 36
    FUNC_TYPE (282)
    OPEN_PAR (283) 29 30 31 32 34
    CLOSE_PAR (284) 29 30 31 32 34
    OPEN_KEY (285) 2 3
    CLOSE_KEY (286) 2 3
    RETURN (287)


Nonterminals, with rules where they appear

    $accept (33)
        on left: 0
    program (34)
        on left: 1
        on right: 0
    block (35)
        on left: 2 3
        on right: 1 5
    statement (36)
        on left: 4 5 6 7 8 9
        on right: 2 31 32 35
    relexpression (37)
        on left: 10 11 12 13 14
        on right: 30 31 32 33 34
    expression (38)
        on left: 15 16 17 18
        on right: 10 11 12 13 14
    term (39)
        on left: 19 20 21 22
        on right: 15 16 17 18
    factor (40)
        on left: 23 24 25 26 27 28 29 30
        on right: 19 20 21 22 26 27 28
    while (41)
        on left: 31
        on right: 8
    if (42)
        on left: 32
        on right: 7
    assigment (43)
        on left: 33
        on right: 4
    print (44)
        on left: 34
        on right: 6
    else (45)
        on left: 35
        on right: 32
    var_type (46)
        on left: 36 37
        on right: 9 33


State 0

    0 $accept: . program $end

    OPEN_KEY  shift, and go to state 1

    program  go to state 2
    block    go to state 3


State 1

    2 block: OPEN_KEY . statement CLOSE_KEY
    3      | OPEN_KEY . CLOSE_KEY

    WHILE      shift, and go to state 4
    IF         shift, and go to state 5
    PRINT      shift, and go to state 6
    COMMA      shift, and go to state 7
    VAR_TYPE   shift, and go to state 8
    OPEN_KEY   shift, and go to state 1
    CLOSE_KEY  shift, and go to state 9

    block      go to state 10
    statement  go to state 11
    while      go to state 12
    if         go to state 13
    assigment  go to state 14
    print      go to state 15
    var_type   go to state 16


State 2

    0 $accept: program . $end

    $end  shift, and go to state 17


State 3

    1 program: block .

    $default  reduce using rule 1 (program)


State 4

   31 while: WHILE . OPEN_PAR relexpression CLOSE_PAR statement

    OPEN_PAR  shift, and go to state 18


State 5

   32 if: IF . OPEN_PAR relexpression CLOSE_PAR statement else

    OPEN_PAR  shift, and go to state 19


State 6

   34 print: PRINT . OPEN_PAR relexpression CLOSE_PAR

    OPEN_PAR  shift, and go to state 20


State 7

   37 var_type: COMMA . IDENTIFIER

    IDENTIFIER  shift, and go to state 21


State 8

   36 var_type: VAR_TYPE . IDENTIFIER

    IDENTIFIER  shift, and go to state 22


State 9

    3 block: OPEN_KEY CLOSE_KEY .

    $default  reduce using rule 3 (block)


State 10

    5 statement: block .

    $default  reduce using rule 5 (statement)


State 11

    2 block: OPEN_KEY statement . CLOSE_KEY

    CLOSE_KEY  shift, and go to state 23


State 12

    8 statement: while .

    $default  reduce using rule 8 (statement)


State 13

    7 statement: if .

    $default  reduce using rule 7 (statement)


State 14

    4 statement: assigment .

    $default  reduce using rule 4 (statement)


State 15

    6 statement: print .

    $default  reduce using rule 6 (statement)


State 16

    9 statement: var_type . SEMI_COLON
   33 assigment: var_type . IDENTIFIER EQUAL relexpression

    IDENTIFIER  shift, and go to state 24
    SEMI_COLON  shift, and go to state 25


State 17

    0 $accept: program $end .

    $default  accept


State 18

   31 while: WHILE OPEN_PAR . relexpression CLOSE_PAR statement

    IDENTIFIER  shift, and go to state 26
    STRING      shift, and go to state 27
    INTEGER     shift, and go to state 28
    READ        shift, and go to state 29
    NOT         shift, and go to state 30
    PLUS        shift, and go to state 31
    MINUS       shift, and go to state 32
    OPEN_PAR    shift, and go to state 33

    relexpression  go to state 34
    expression     go to state 35
    term           go to state 36
    factor         go to state 37


State 19

   32 if: IF OPEN_PAR . relexpression CLOSE_PAR statement else

    IDENTIFIER  shift, and go to state 26
    STRING      shift, and go to state 27
    INTEGER     shift, and go to state 28
    READ        shift, and go to state 29
    NOT         shift, and go to state 30
    PLUS        shift, and go to state 31
    MINUS       shift, and go to state 32
    OPEN_PAR    shift, and go to state 33

    relexpression  go to state 38
    expression     go to state 35
    term           go to state 36
    factor         go to state 37


State 20

   34 print: PRINT OPEN_PAR . relexpression CLOSE_PAR

    IDENTIFIER  shift, and go to state 26
    STRING      shift, and go to state 27
    INTEGER     shift, and go to state 28
    READ        shift, and go to state 29
    NOT         shift, and go to state 30
    PLUS        shift, and go to state 31
    MINUS       shift, and go to state 32
    OPEN_PAR    shift, and go to state 33

    relexpression  go to state 39
    expression     go to state 35
    term           go to state 36
    factor         go to state 37


State 21

   37 var_type: COMMA IDENTIFIER .

    $default  reduce using rule 37 (var_type)


State 22

   36 var_type: VAR_TYPE IDENTIFIER .

    $default  reduce using rule 36 (var_type)


State 23

    2 block: OPEN_KEY statement CLOSE_KEY .

    $default  reduce using rule 2 (block)


State 24

   33 assigment: var_type IDENTIFIER . EQUAL relexpression

    EQUAL  shift, and go to state 40


State 25

    9 statement: var_type SEMI_COLON .

    $default  reduce using rule 9 (statement)


State 26

   25 factor: IDENTIFIER .

    $default  reduce using rule 25 (factor)


State 27

   24 factor: STRING .

    $default  reduce using rule 24 (factor)


State 28

   23 factor: INTEGER .

    $default  reduce using rule 23 (factor)


State 29

   29 factor: READ . OPEN_PAR CLOSE_PAR

    OPEN_PAR  shift, and go to state 41


State 30

   28 factor: NOT . factor

    IDENTIFIER  shift, and go to state 26
    STRING      shift, and go to state 27
    INTEGER     shift, and go to state 28
    READ        shift, and go to state 29
    NOT         shift, and go to state 30
    PLUS        shift, and go to state 31
    MINUS       shift, and go to state 32
    OPEN_PAR    shift, and go to state 33

    factor  go to state 42


State 31

   26 factor: PLUS . factor

    IDENTIFIER  shift, and go to state 26
    STRING      shift, and go to state 27
    INTEGER     shift, and go to state 28
    READ        shift, and go to state 29
    NOT         shift, and go to state 30
    PLUS        shift, and go to state 31
    MINUS       shift, and go to state 32
    OPEN_PAR    shift, and go to state 33

    factor  go to state 43


State 32

   27 factor: MINUS . factor

    IDENTIFIER  shift, and go to state 26
    STRING      shift, and go to state 27
    INTEGER     shift, and go to state 28
    READ        shift, and go to state 29
    NOT         shift, and go to state 30
    PLUS        shift, and go to state 31
    MINUS       shift, and go to state 32
    OPEN_PAR    shift, and go to state 33

    factor  go to state 44


State 33

   30 factor: OPEN_PAR . relexpression CLOSE_PAR

    IDENTIFIER  shift, and go to state 26
    STRING      shift, and go to state 27
    INTEGER     shift, and go to state 28
    READ        shift, and go to state 29
    NOT         shift, and go to state 30
    PLUS        shift, and go to state 31
    MINUS       shift, and go to state 32
    OPEN_PAR    shift, and go to state 33

    relexpression  go to state 45
    expression     go to state 35
    term           go to state 36
    factor         go to state 37


State 34

   31 while: WHILE OPEN_PAR relexpression . CLOSE_PAR statement

    CLOSE_PAR  shift, and go to state 46


State 35

   10 relexpression: expression . EQUAL_TO expression
   11              | expression . BIGGER_THAN expression
   12              | expression . SMALLER_THAN expression
   13              | expression . CONCAT expression
   14              | expression .

    EQUAL_TO      shift, and go to state 47
    BIGGER_THAN   shift, and go to state 48
    SMALLER_THAN  shift, and go to state 49
    CONCAT        shift, and go to state 50

    $default  reduce using rule 14 (relexpression)


State 36

   15 expression: term . PLUS term
   16           | term . MINUS term
   17           | term . OR term
   18           | term .

    PLUS   shift, and go to state 51
    MINUS  shift, and go to state 52
    OR     shift, and go to state 53

    $default  reduce using rule 18 (expression)


State 37

   19 term: factor .
   20     | factor . MULT factor
   21     | factor . DIV factor
   22     | factor . AND factor

    MULT  shift, and go to state 54
    DIV   shift, and go to state 55
    AND   shift, and go to state 56

    $default  reduce using rule 19 (term)


State 38

   32 if: IF OPEN_PAR relexpression . CLOSE_PAR statement else

    CLOSE_PAR  shift, and go to state 57


State 39

   34 print: PRINT OPEN_PAR relexpression . CLOSE_PAR

    CLOSE_PAR  shift, and go to state 58


State 40

   33 assigment: var_type IDENTIFIER EQUAL . relexpression

    IDENTIFIER  shift, and go to state 26
    STRING      shift, and go to state 27
    INTEGER     shift, and go to state 28
    READ        shift, and go to state 29
    NOT         shift, and go to state 30
    PLUS        shift, and go to state 31
    MINUS       shift, and go to state 32
    OPEN_PAR    shift, and go to state 33

    relexpression  go to state 59
    expression     go to state 35
    term           go to state 36
    factor         go to state 37


State 41

   29 factor: READ OPEN_PAR . CLOSE_PAR

    CLOSE_PAR  shift, and go to state 60


State 42

   28 factor: NOT factor .

    $default  reduce using rule 28 (factor)


State 43

   26 factor: PLUS factor .

    $default  reduce using rule 26 (factor)


State 44

   27 factor: MINUS factor .

    $default  reduce using rule 27 (factor)


State 45

   30 factor: OPEN_PAR relexpression . CLOSE_PAR

    CLOSE_PAR  shift, and go to state 61


State 46

   31 while: WHILE OPEN_PAR relexpression CLOSE_PAR . statement

    WHILE     shift, and go to state 4
    IF        shift, and go to state 5
    PRINT     shift, and go to state 6
    COMMA     shift, and go to state 7
    VAR_TYPE  shift, and go to state 8
    OPEN_KEY  shift, and go to state 1

    block      go to state 10
    statement  go to state 62
    while      go to state 12
    if         go to state 13
    assigment  go to state 14
    print      go to state 15
    var_type   go to state 16


State 47

   10 relexpression: expression EQUAL_TO . expression

    IDENTIFIER  shift, and go to state 26
    STRING      shift, and go to state 27
    INTEGER     shift, and go to state 28
    READ        shift, and go to state 29
    NOT         shift, and go to state 30
    PLUS        shift, and go to state 31
    MINUS       shift, and go to state 32
    OPEN_PAR    shift, and go to state 33

    expression  go to state 63
    term        go to state 36
    factor      go to state 37


State 48

   11 relexpression: expression BIGGER_THAN . expression

    IDENTIFIER  shift, and go to state 26
    STRING      shift, and go to state 27
    INTEGER     shift, and go to state 28
    READ        shift, and go to state 29
    NOT         shift, and go to state 30
    PLUS        shift, and go to state 31
    MINUS       shift, and go to state 32
    OPEN_PAR    shift, and go to state 33

    expression  go to state 64
    term        go to state 36
    factor      go to state 37


State 49

   12 relexpression: expression SMALLER_THAN . expression

    IDENTIFIER  shift, and go to state 26
    STRING      shift, and go to state 27
    INTEGER     shift, and go to state 28
    READ        shift, and go to state 29
    NOT         shift, and go to state 30
    PLUS        shift, and go to state 31
    MINUS       shift, and go to state 32
    OPEN_PAR    shift, and go to state 33

    expression  go to state 65
    term        go to state 36
    factor      go to state 37


State 50

   13 relexpression: expression CONCAT . expression

    IDENTIFIER  shift, and go to state 26
    STRING      shift, and go to state 27
    INTEGER     shift, and go to state 28
    READ        shift, and go to state 29
    NOT         shift, and go to state 30
    PLUS        shift, and go to state 31
    MINUS       shift, and go to state 32
    OPEN_PAR    shift, and go to state 33

    expression  go to state 66
    term        go to state 36
    factor      go to state 37


State 51

   15 expression: term PLUS . term

    IDENTIFIER  shift, and go to state 26
    STRING      shift, and go to state 27
    INTEGER     shift, and go to state 28
    READ        shift, and go to state 29
    NOT         shift, and go to state 30
    PLUS        shift, and go to state 31
    MINUS       shift, and go to state 32
    OPEN_PAR    shift, and go to state 33

    term    go to state 67
    factor  go to state 37


State 52

   16 expression: term MINUS . term

    IDENTIFIER  shift, and go to state 26
    STRING      shift, and go to state 27
    INTEGER     shift, and go to state 28
    READ        shift, and go to state 29
    NOT         shift, and go to state 30
    PLUS        shift, and go to state 31
    MINUS       shift, and go to state 32
    OPEN_PAR    shift, and go to state 33

    term    go to state 68
    factor  go to state 37


State 53

   17 expression: term OR . term

    IDENTIFIER  shift, and go to state 26
    STRING      shift, and go to state 27
    INTEGER     shift, and go to state 28
    READ        shift, and go to state 29
    NOT         shift, and go to state 30
    PLUS        shift, and go to state 31
    MINUS       shift, and go to state 32
    OPEN_PAR    shift, and go to state 33

    term    go to state 69
    factor  go to state 37


State 54

   20 term: factor MULT . factor

    IDENTIFIER  shift, and go to state 26
    STRING      shift, and go to state 27
    INTEGER     shift, and go to state 28
    READ        shift, and go to state 29
    NOT         shift, and go to state 30
    PLUS        shift, and go to state 31
    MINUS       shift, and go to state 32
    OPEN_PAR    shift, and go to state 33

    factor  go to state 70


State 55

   21 term: factor DIV . factor

    IDENTIFIER  shift, and go to state 26
    STRING      shift, and go to state 27
    INTEGER     shift, and go to state 28
    READ        shift, and go to state 29
    NOT         shift, and go to state 30
    PLUS        shift, and go to state 31
    MINUS       shift, and go to state 32
    OPEN_PAR    shift, and go to state 33

    factor  go to state 71


State 56

   22 term: factor AND . factor

    IDENTIFIER  shift, and go to state 26
    STRING      shift, and go to state 27
    INTEGER     shift, and go to state 28
    READ        shift, and go to state 29
    NOT         shift, and go to state 30
    PLUS        shift, and go to state 31
    MINUS       shift, and go to state 32
    OPEN_PAR    shift, and go to state 33

    factor  go to state 72


State 57

   32 if: IF OPEN_PAR relexpression CLOSE_PAR . statement else

    WHILE     shift, and go to state 4
    IF        shift, and go to state 5
    PRINT     shift, and go to state 6
    COMMA     shift, and go to state 7
    VAR_TYPE  shift, and go to state 8
    OPEN_KEY  shift, and go to state 1

    block      go to state 10
    statement  go to state 73
    while      go to state 12
    if         go to state 13
    assigment  go to state 14
    print      go to state 15
    var_type   go to state 16


State 58

   34 print: PRINT OPEN_PAR relexpression CLOSE_PAR .

    $default  reduce using rule 34 (print)


State 59

   33 assigment: var_type IDENTIFIER EQUAL relexpression .

    $default  reduce using rule 33 (assigment)


State 60

   29 factor: READ OPEN_PAR CLOSE_PAR .

    $default  reduce using rule 29 (factor)


State 61

   30 factor: OPEN_PAR relexpression CLOSE_PAR .

    $default  reduce using rule 30 (factor)


State 62

   31 while: WHILE OPEN_PAR relexpression CLOSE_PAR statement .

    $default  reduce using rule 31 (while)


State 63

   10 relexpression: expression EQUAL_TO expression .

    $default  reduce using rule 10 (relexpression)


State 64

   11 relexpression: expression BIGGER_THAN expression .

    $default  reduce using rule 11 (relexpression)


State 65

   12 relexpression: expression SMALLER_THAN expression .

    $default  reduce using rule 12 (relexpression)


State 66

   13 relexpression: expression CONCAT expression .

    $default  reduce using rule 13 (relexpression)


State 67

   15 expression: term PLUS term .

    $default  reduce using rule 15 (expression)


State 68

   16 expression: term MINUS term .

    $default  reduce using rule 16 (expression)


State 69

   17 expression: term OR term .

    $default  reduce using rule 17 (expression)


State 70

   20 term: factor MULT factor .

    $default  reduce using rule 20 (term)


State 71

   21 term: factor DIV factor .

    $default  reduce using rule 21 (term)


State 72

   22 term: factor AND factor .

    $default  reduce using rule 22 (term)


State 73

   32 if: IF OPEN_PAR relexpression CLOSE_PAR statement . else

    ELSE  shift, and go to state 74

    else  go to state 75


State 74

   35 else: ELSE . statement

    WHILE     shift, and go to state 4
    IF        shift, and go to state 5
    PRINT     shift, and go to state 6
    COMMA     shift, and go to state 7
    VAR_TYPE  shift, and go to state 8
    OPEN_KEY  shift, and go to state 1

    block      go to state 10
    statement  go to state 76
    while      go to state 12
    if         go to state 13
    assigment  go to state 14
    print      go to state 15
    var_type   go to state 16


State 75

   32 if: IF OPEN_PAR relexpression CLOSE_PAR statement else .

    $default  reduce using rule 32 (if)


State 76

   35 else: ELSE statement .

    $default  reduce using rule 35 (else)
